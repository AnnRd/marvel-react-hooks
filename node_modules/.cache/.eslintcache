[{"/home/anton/Рабочий стол/anya/marvel/marvel/src/index.js":"1","/home/anton/Рабочий стол/anya/marvel/marvel/src/components/app/App.js":"2","/home/anton/Рабочий стол/anya/marvel/marvel/src/components/randomChar/RandomChar.js":"3","/home/anton/Рабочий стол/anya/marvel/marvel/src/components/appHeader/AppHeader.js":"4","/home/anton/Рабочий стол/anya/marvel/marvel/src/components/charList/CharList.js":"5","/home/anton/Рабочий стол/anya/marvel/marvel/src/components/charInfo/CharInfo.js":"6","/home/anton/Рабочий стол/anya/marvel/marvel/src/services/MarvelService.js":"7","/home/anton/Рабочий стол/anya/marvel/marvel/src/components/spinner/Spinner.js":"8","/home/anton/Рабочий стол/anya/marvel/marvel/src/components/errorMessage/ErrorMessage.js":"9","/home/anton/Рабочий стол/anya/marvel/marvel/src/components/skeleton/Skeleton.js":"10","/home/anton/Рабочий стол/anya/marvel/marvel/src/components/errorBoundary/ErrorBoundary.js":"11","/home/anton/Рабочий стол/anya/hooks/src/index.js":"12","/home/anton/Рабочий стол/anya/hooks/src/components/app/App.js":"13","/home/anton/Рабочий стол/anya/hooks/src/components/appHeader/AppHeader.js":"14","/home/anton/Рабочий стол/anya/hooks/src/components/randomChar/RandomChar.js":"15","/home/anton/Рабочий стол/anya/hooks/src/components/charList/CharList.js":"16","/home/anton/Рабочий стол/anya/hooks/src/components/errorBoundary/ErrorBoundary.js":"17","/home/anton/Рабочий стол/anya/hooks/src/components/charInfo/CharInfo.js":"18","/home/anton/Рабочий стол/anya/hooks/src/services/MarvelService.js":"19","/home/anton/Рабочий стол/anya/hooks/src/components/spinner/Spinner.js":"20","/home/anton/Рабочий стол/anya/hooks/src/components/errorMessage/ErrorMessage.js":"21","/home/anton/Рабочий стол/anya/hooks/src/components/skeleton/Skeleton.js":"22","/home/anton/Рабочий стол/anya/hooks/src/hooks/http.hook.js":"23","/home/anton/Рабочий стол/anya/hooks/src/components/comicsList/ComicsList.js":"24","/home/anton/Рабочий стол/anya/hooks/src/components/appBanner/AppBanner.js":"25","/home/anton/Рабочий стол/anya/hooks/src/components/pages/index.js":"26","/home/anton/Рабочий стол/anya/hooks/src/components/pages/MainPage.js":"27","/home/anton/Рабочий стол/anya/hooks/src/components/pages/ComicsPage.js":"28","/home/anton/Рабочий стол/anya/hooks/src/components/pages/404.js":"29"},{"size":243,"mtime":1655215942226,"results":"30","hashOfConfig":"31"},{"size":1346,"mtime":1655735492524,"results":"32","hashOfConfig":"31"},{"size":3492,"mtime":1655550950010,"results":"33","hashOfConfig":"31"},{"size":559,"mtime":1629625707000,"results":"34","hashOfConfig":"31"},{"size":3887,"mtime":1655740333584,"results":"35","hashOfConfig":"31"},{"size":3674,"mtime":1655635704955,"results":"36","hashOfConfig":"31"},{"size":1370,"mtime":1655570465347,"results":"37","hashOfConfig":"31"},{"size":4551,"mtime":1655370444021,"results":"38","hashOfConfig":"31"},{"size":247,"mtime":1655369614933,"results":"39","hashOfConfig":"31"},{"size":666,"mtime":1629627051000,"results":"40","hashOfConfig":"31"},{"size":491,"mtime":1655569887173,"results":"41","hashOfConfig":"31"},{"size":243,"mtime":1655215942226,"results":"42","hashOfConfig":"43"},{"size":678,"mtime":1656433012980,"results":"44","hashOfConfig":"43"},{"size":955,"mtime":1656429582906,"results":"45","hashOfConfig":"43"},{"size":3134,"mtime":1655975203819,"results":"46","hashOfConfig":"43"},{"size":3866,"mtime":1655974444535,"results":"47","hashOfConfig":"43"},{"size":491,"mtime":1655569887173,"results":"48","hashOfConfig":"43"},{"size":3239,"mtime":1655975848325,"results":"49","hashOfConfig":"43"},{"size":2141,"mtime":1656078835467,"results":"50","hashOfConfig":"43"},{"size":4551,"mtime":1655370444021,"results":"51","hashOfConfig":"43"},{"size":247,"mtime":1655369614933,"results":"52","hashOfConfig":"43"},{"size":666,"mtime":1629627051000,"results":"53","hashOfConfig":"43"},{"size":1419,"mtime":1655975082071,"results":"54","hashOfConfig":"43"},{"size":2534,"mtime":1656079469585,"results":"55","hashOfConfig":"43"},{"size":522,"mtime":1629627299000,"results":"56","hashOfConfig":"43"},{"size":143,"mtime":1656432966672,"results":"57","hashOfConfig":"43"},{"size":1002,"mtime":1656345313819,"results":"58","hashOfConfig":"43"},{"size":249,"mtime":1656345614975,"results":"59","hashOfConfig":"43"},{"size":512,"mtime":1656432919463,"results":"60","hashOfConfig":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"13s99u7",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"mudjk2",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/anton/Рабочий стол/anya/marvel/marvel/src/index.js",[],["127","128"],"/home/anton/Рабочий стол/anya/marvel/marvel/src/components/app/App.js",[],"/home/anton/Рабочий стол/anya/marvel/marvel/src/components/randomChar/RandomChar.js",[],"/home/anton/Рабочий стол/anya/marvel/marvel/src/components/appHeader/AppHeader.js",["129","130","131"],"import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","/home/anton/Рабочий стол/anya/marvel/marvel/src/components/charList/CharList.js",[],"/home/anton/Рабочий стол/anya/marvel/marvel/src/components/charInfo/CharInfo.js",["132"],"import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Sceleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        character: null,\n        loading: false,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onCharLoaded = (character) => {\n        this.setState({\n            character, \n            loading: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const {character, loading, error} = this.state;\n\n        const skeleton = character || loading || error ? null : <Sceleton/>; // \"заглушка\" пока не выбран никакой персонаж из charList\n        const content = !loading && !error && character ? <View character={character}/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error? <ErrorMessage/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {content}\n                {spinner}\n                {errorMessage}\n            </div>\n        )\n    }\n    \n}\n\nconst View = ({character}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = character;\n    const notAvailableImg = thumbnail.includes('image_not_available');\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={{objectFit: notAvailableImg ? 'contain' : 'cover'}}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n               {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There`s no comics with this character.'}\n                {\n                    comics.map( (item, i) => {\n                        if (i > 9) {\n                            return;\n                        }\n\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","/home/anton/Рабочий стол/anya/marvel/marvel/src/services/MarvelService.js",[],"/home/anton/Рабочий стол/anya/marvel/marvel/src/components/spinner/Spinner.js",[],"/home/anton/Рабочий стол/anya/marvel/marvel/src/components/errorMessage/ErrorMessage.js",[],"/home/anton/Рабочий стол/anya/marvel/marvel/src/components/skeleton/Skeleton.js",[],"/home/anton/Рабочий стол/anya/marvel/marvel/src/components/errorBoundary/ErrorBoundary.js",[],"/home/anton/Рабочий стол/anya/hooks/src/index.js",[],["133","134"],"/home/anton/Рабочий стол/anya/hooks/src/components/app/App.js",[],"/home/anton/Рабочий стол/anya/hooks/src/components/appHeader/AppHeader.js",[],"/home/anton/Рабочий стол/anya/hooks/src/components/randomChar/RandomChar.js",["135"],"import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    const [character, setCharacter] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    const onCharLoaded = (character) => {\n        setCharacter(character);\n    }\n\n    const updateChar = () => {\n        clearError(); //если появилась ошибка, она очистится перед новым запросом\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); //  * (max - min) + min\n\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n        const content = !loading && !error && character ? <View character={character}/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error? <ErrorMessage/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {content}\n                {spinner}\n                {errorMessage}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n}\n\nconst View = ({character}) => {\n    const {name, description, thumbnail, homepage, wiki} = character;\n    const notAvailableImg = thumbnail.includes('image_not_available');\n\n    return (\n        <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" style={{objectFit: notAvailableImg ? 'contain' : 'cover'}} className=\"randomchar__img\"/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                            {description}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n    )\n}\n\nexport default RandomChar;\n","/home/anton/Рабочий стол/anya/hooks/src/components/charList/CharList.js",["136","137"],"import { useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n    const [charList, setCharList] = useState([]);\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charListEnd, setCharListEnd] = useState(false);\n    const [selected, setSelected] = useState(null); //мое для активного стиля\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []); //пустой массив для отслеживания - функция выполнится только один раз -- при создании компонента.Имитация componentDidMount. useEffect вызыввается после рендера всего.\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemsLoading(false) : setNewItemsLoading(true); //если initial = true, то загрузка первичная и setNewItemsLoading(false) должно остатьс в false\n\n        getAllCharacters(offset)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (newCharList) => {\n        let end = false;\n        if (newCharList.length < 9) {\n            end = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]); //развернула старый массив персонажей и за ним добавила новый. При первичной загрузке charlist - пустой массив\n        setNewItemsLoading(newItemsLoading => false);\n        setOffset(offset => offset + 9);\n        setCharListEnd(charListEnd => end);\n    }\n\n    const handleClick = ()  => {\n        setSelected(selected => props.charId);\n      }\n\n    function renderCharacters(arr) {\n        const characters = arr.map( obj => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (obj.thumbnail.includes('image_not_available')) {\n                imgStyle = {'objectFit' : 'unset'};\n            }            \n\n            let selectedClass = 'char__item  char__item_selected';\n\n            return (\n                <li\n                className={props.charId === obj.id ? selectedClass : 'char__item'}\n                key={obj.id}\n                onClick={() => {\n                    handleClick();\n                    props.onCharSelected(obj.id)\n                }}>\n                    <img src={obj.thumbnail} alt={obj.name}  style={imgStyle}/>\n                    <div className=\"char__name\">{obj.name}</div>\n                </li>\n            )\n            \n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {characters}\n            </ul>\n        ) //Для центровки спиннера/ошибки\n    }\n        \n    const items = renderCharacters(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemsLoading ? <Spinner/> : null; //если есть загрузка, но это не загрузка новых персонажей\n\n    return (\n        <div className=\"char__list\">\n                {items}\n                {spinner}\n                {errorMessage}\n            <button\n            className=\"button button__main button__long\"\n            disabled={newItemsLoading}\n            style={{'display': charListEnd ? 'none' : 'block'}}\n            onClick={() => {onRequest(offset)}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )   \n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","/home/anton/Рабочий стол/anya/hooks/src/components/errorBoundary/ErrorBoundary.js",[],"/home/anton/Рабочий стол/anya/hooks/src/components/charInfo/CharInfo.js",["138","139"],"import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Sceleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n    const [character, setCharacter] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n\n        if (!charId) {\n            return;\n        }\n\n        clearError(); //если появилась ошибка, она очистится перед новым запросом\n        getCharacter(charId)\n            .then(onCharLoaded);\n    }\n\n    const onCharLoaded = (character) => {\n        setCharacter(character);\n    }\n\n        const skeleton = character || loading || error ? null : <Sceleton/>; // \"заглушка\" пока не выбран никакой персонаж из charList\n        const content = !loading && !error && character ? <View character={character}/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error? <ErrorMessage/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {content}\n                {spinner}\n                {errorMessage}\n            </div>\n        )\n}\n\nconst View = ({character}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = character;\n    const notAvailableImg = thumbnail.includes('image_not_available');\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={{objectFit: notAvailableImg ? 'contain' : 'cover'}}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n               {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There`s no comics with this character.'}\n                {\n                    comics.map( (item, i) => {\n                        if (i > 9) {\n                            return;\n                        }\n\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","/home/anton/Рабочий стол/anya/hooks/src/services/MarvelService.js",[],"/home/anton/Рабочий стол/anya/hooks/src/components/spinner/Spinner.js",[],"/home/anton/Рабочий стол/anya/hooks/src/components/errorMessage/ErrorMessage.js",[],"/home/anton/Рабочий стол/anya/hooks/src/components/skeleton/Skeleton.js",[],"/home/anton/Рабочий стол/anya/hooks/src/hooks/http.hook.js",[],"/home/anton/Рабочий стол/anya/hooks/src/components/comicsList/ComicsList.js",["140","141"],"import { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnd, setComicsEnd] = useState(false);\n\n\n    const {loading, error, getComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemsLoading(false) : setNewItemsLoading(true); //если initial = true, то загрузка первичная и setNewItemsLoading(false) должно остатьс в false\n\n        getComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newList) => {\n        let end = false;\n        if (newList.length < 8) {\n            end = true;\n        }\n        setComicsList([...comicsList, ...newList]);\n        setNewItemsLoading(false);\n        setOffset(offset + 8);\n        setComicsEnd(end);\n    }\n\n    const renderComics = (arr) => {\n        const comics = arr.map(obj => {\n\n            return (\n                <li key={obj.id} className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={obj.image} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{obj.name.toUpperCase()}</div>\n                        <div className=\"comics__item-price\">{obj.price}</div>\n                    </a>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {comics}\n            </ul>\n)\n     \n    }\n\n   const items = renderComics(comicsList);\n   const errorMessage = error ? <ErrorMessage/> : null;\n   const spinner = loading && !newItemsLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {items}\n            {spinner}\n            {errorMessage}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemsLoading}\n                style={{'display' : comicsEnd ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n\n    \n}\n\nexport default ComicsList;","/home/anton/Рабочий стол/anya/hooks/src/components/appBanner/AppBanner.js",[],"/home/anton/Рабочий стол/anya/hooks/src/components/pages/index.js",[],"/home/anton/Рабочий стол/anya/hooks/src/components/pages/MainPage.js",[],"/home/anton/Рабочий стол/anya/hooks/src/components/pages/ComicsPage.js",[],"/home/anton/Рабочий стол/anya/hooks/src/components/pages/404.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":7,"column":17,"nodeType":"148","endLine":7,"endColumn":29},{"ruleId":"146","severity":1,"message":"147","line":13,"column":25,"nodeType":"148","endLine":13,"endColumn":37},{"ruleId":"146","severity":1,"message":"147","line":15,"column":25,"nodeType":"148","endLine":15,"endColumn":37},{"ruleId":"149","severity":1,"message":"150","line":114,"column":29,"nodeType":"151","messageId":"152","endLine":114,"endColumn":36},{"ruleId":"142","replacedBy":"153"},{"ruleId":"144","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":15,"column":8,"nodeType":"157","endLine":15,"endColumn":10,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":15,"column":12,"nodeType":"161","messageId":"162","endLine":15,"endColumn":20},{"ruleId":"155","severity":1,"message":"163","line":21,"column":8,"nodeType":"157","endLine":21,"endColumn":10,"suggestions":"164"},{"ruleId":"155","severity":1,"message":"156","line":18,"column":8,"nodeType":"157","endLine":18,"endColumn":22,"suggestions":"165"},{"ruleId":"149","severity":1,"message":"150","line":80,"column":29,"nodeType":"151","messageId":"152","endLine":80,"endColumn":36},{"ruleId":"155","severity":1,"message":"163","line":19,"column":8,"nodeType":"157","endLine":19,"endColumn":10,"suggestions":"166"},{"ruleId":"146","severity":1,"message":"147","line":44,"column":21,"nodeType":"148","endLine":44,"endColumn":33},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["167"],["168"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.","ArrayExpression",["169"],"no-unused-vars","'selected' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'offset' and 'onRequest'. Either include them or remove the dependency array.",["170"],["171"],["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"175","fix":"179"},"Update the dependencies array to be: [updateChar]",{"range":"180","text":"181"},"Update the dependencies array to be: [offset, onRequest]",{"range":"182","text":"183"},"Update the dependencies array to be: [props.charId, updateChar]",{"range":"184","text":"185"},{"range":"186","text":"183"},[498,500],"[updateChar]",[731,733],"[offset, onRequest]",[526,540],"[props.charId, updateChar]",[608,610]]