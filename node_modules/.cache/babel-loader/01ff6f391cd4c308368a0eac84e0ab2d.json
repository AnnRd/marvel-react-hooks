{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/anya/marvel/marvel/src/components/charInfo/CharInfo.js\";\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Sceleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CharInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      character: null,\n      loading: false,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.updateChar = () => {\n      const {\n        charId\n      } = this.props;\n\n      if (!charId) {\n        return;\n      }\n\n      this.onCharLoading();\n      this.marvelService.getCharacter(charId).then(this.onCharLoaded).catch(this.onError);\n    };\n\n    this.onCharLoading = () => {\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.onCharLoaded = character => {\n      this.setState({\n        character,\n        loading: false\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  render() {\n    const {\n      character,\n      loading,\n      error\n    } = this.state;\n    const skeleton = character || loading || error ? null : /*#__PURE__*/_jsxDEV(Sceleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 65\n    }, this); // \"заглушка\" пока не выбран никакой персонаж из charList\n\n    const content = !loading && !error && character ? /*#__PURE__*/_jsxDEV(View, {\n      character: character\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 59\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 35\n    }, this) : null;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__info\",\n      children: [skeleton, content, spinner, errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst View = ({\n  character\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki,\n    comics\n  } = character;\n  const notAvailableImg = thumbnail.includes('image_not_available');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: name,\n        style: {\n          objectFit: notAvailableImg ? 'contain' : 'cover'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: [comics.length > 0 ? null : 'There`s no comics with this character.', comics.map((item, i) => {\n        if (i > 9) {\n          return;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          children: item.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = View;\nCharInfo.propTypes = {\n  charId: Pro\n};\nexport default CharInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/home/anton/Рабочий стол/anya/marvel/marvel/src/components/charInfo/CharInfo.js"],"names":["Component","PropTypes","MarvelService","Spinner","ErrorMessage","Sceleton","CharInfo","state","character","loading","error","marvelService","updateChar","charId","props","onCharLoading","getCharacter","then","onCharLoaded","catch","onError","setState","componentDidMount","componentDidUpdate","prevProps","render","skeleton","content","spinner","errorMessage","View","name","description","thumbnail","homepage","wiki","comics","notAvailableImg","includes","objectFit","length","map","item","i","propTypes","Pro"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Sceleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        character: null,\n        loading: false,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onCharLoaded = (character) => {\n        this.setState({\n            character, \n            loading: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const {character, loading, error} = this.state;\n\n        const skeleton = character || loading || error ? null : <Sceleton/>; // \"заглушка\" пока не выбран никакой персонаж из charList\n        const content = !loading && !error && character ? <View character={character}/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error? <ErrorMessage/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {content}\n                {spinner}\n                {errorMessage}\n            </div>\n        )\n    }\n    \n}\n\nconst View = ({character}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = character;\n    const notAvailableImg = thumbnail.includes('image_not_available');\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={{objectFit: notAvailableImg ? 'contain' : 'cover'}}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n               {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There`s no comics with this character.'}\n                {\n                    comics.map( (item, i) => {\n                        if (i > 9) {\n                            return;\n                        }\n\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: Pro\n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}