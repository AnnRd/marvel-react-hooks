{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/anya/hooks/src/components/pages/SingleComicPage.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './singleComicPage.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SingleComicPage = () => {\n  _s();\n\n  const {\n    comicId\n  } = useParams(); //приходит из url\n\n  const [comic, setComic] = useState(null); //comic - объект со всеми данными о комиксЕ\n\n  const {\n    loading,\n    error,\n    getComic,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateComic();\n  }, [comicId]);\n\n  const updateComic = () => {\n    clearError(); //если появилась ошибка, она очистится перед новым запросом\n\n    getComic(comicId).then(onComicLoaded);\n  };\n\n  const onComicLoaded = comic => {\n    setComic(comic);\n  };\n\n  const content = !loading && !error && comic ? /*#__PURE__*/_jsxDEV(View, {\n    comic: comic\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 51\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 31\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 34\n  }, this) : null;\n  console.log();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [content, spinner, errorMessage]\n  }, void 0, true);\n};\n\n_s(SingleComicPage, \"HJHxJHKBG33Yho+xNQ7hs220yMo=\", false, function () {\n  return [useParams, useMarvelService];\n});\n\n_c = SingleComicPage;\n\nconst View = ({\n  comic\n}) => {\n  const {\n    title,\n    description,\n    pageCount,\n    image,\n    price,\n    language\n  } = comic;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-comic\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: title,\n      className: \"single-comic__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-comic__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"single-comic__name\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"single-comic__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"single-comic__descr\",\n        children: pageCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"single-comic__descr\",\n        children: [\"Language: \", language]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-comic__price\",\n        children: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/comics\",\n      className: \"single-comic__back\",\n      children: \"Back to all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = View;\nexport default SingleComicPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingleComicPage\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["/home/anton/Рабочий стол/anya/hooks/src/components/pages/SingleComicPage.js"],"names":["useParams","Link","useState","useEffect","useMarvelService","Spinner","ErrorMessage","SingleComicPage","comicId","comic","setComic","loading","error","getComic","clearError","updateComic","then","onComicLoaded","content","spinner","errorMessage","console","log","View","title","description","pageCount","image","price","language"],"mappings":"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","sourcesContent":["import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n    const {comicId} = useParams(); //приходит из url\n    const [comic, setComic] = useState(null); //comic - объект со всеми данными о комиксЕ\n    const {loading, error, getComic, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateComic();\n    }, [comicId])\n\n    const updateComic = () => {\n        clearError(); //если появилась ошибка, она очистится перед новым запросом\n        getComic(comicId)\n            .then(onComicLoaded);\n    }\n\n    const onComicLoaded = (comic) => {\n        setComic(comic);\n    }\n\n    const content = !loading && !error && comic ? <View comic={comic}/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    console.log();\n\n    return (\n       <>\n        {content}\n        {spinner}\n        {errorMessage}\n       </>\n    )\n}\n\nconst View = ({comic}) => {\n    const {title, description, pageCount, image, price, language} = comic;\n\n    return (\n        <div className=\"single-comic\">\n            <img src={image} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComicPage;"]},"metadata":{},"sourceType":"module"}