{"ast":null,"code":"// import { useEffect, useState } from 'react';\n// import useMarvelService from '../../services/MarvelService';\n// import Spinner from '../spinner/Spinner';\n// import ErrorMessage from '../errorMessage/ErrorMessage';\n// import './comicsList.scss';\n// const ComicsList = () => {\n//     const [comicsList, setComicsList] = useState([]);\n//     const [newItemsLoading, setNewItemsLoading] = useState(false);\n//     const [offset, setOffset] = useState(0);\n//     const [comicsEnd, setComicsEnd] = useState(false);\n//     const {loading, error, getComics} = useMarvelService();\n//     useEffect(() => {\n//         onRequest(offset, true);\n//     }, [])\n//     const onRequest = (offset, initial) => {\n//         initial ? setNewItemsLoading(false) : setNewItemsLoading(true); //если initial = true, то загрузка первичная и setNewItemsLoading(false) должно остатьс в false\n//         getComics(offset)\n//             .then(onComicsListLoaded)\n//     }\n//     const onComicsListLoaded = (newList) => {\n//         let end = false;\n//         if (newList.length < 8) {\n//             end = true;\n//         }\n//         setComicsList([...comicsList, ...newList]);\n//         setNewItemsLoading(false);\n//         setOffset(offset + 8);\n//         setComicsEnd(end);\n//     }\n//     const renderComics = (arr) => {\n//         const comics = arr.map(obj => {\n//             return (\n//                 <li key={obj.id} className=\"comics__item\">\n//                     <a href=\"#\">\n//                         <img src={obj.image} alt=\"ultimate war\" className=\"comics__item-img\"/>\n//                         <div className=\"comics__item-name\">{obj.name.toUpperCase()}</div>\n//                         <div className=\"comics__item-price\">{obj.price}</div>\n//                     </a>\n//                 </li>\n//             )\n//         })\n//         return (\n//             <ul className=\"comics__grid\">\n//                 {comics}\n//             </ul>\n// )\n//     }\n//    const items = renderComics(comicsList);\n//    const errorMessage = error ? <ErrorMessage/> : null;\n//    const spinner = loading && !newItemsLoading ? <Spinner/> : null;\n//     return (\n//         <div className=\"comics__list\">\n//             {items}\n//             {spinner}\n//             {errorMessage}\n//             <button\n//                 className=\"button button__main button__long\"\n//                 disabled={newItemsLoading}\n//                 style={{'display' : comicsEnd ? 'none' : 'block'}}\n//                 onClick={() => onRequest(offset)}>\n//                 <div className=\"inner\">load more</div>\n//             </button>\n//         </div>\n//     )\n// }\n// export default ComicsList;","map":{"version":3,"sources":["/home/anton/Рабочий стол/anya/hooks/src/components/comicsList/ComicsList.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA","sourcesContent":["// import { useEffect, useState } from 'react';\n// import useMarvelService from '../../services/MarvelService';\n// import Spinner from '../spinner/Spinner';\n// import ErrorMessage from '../errorMessage/ErrorMessage';\n\n// import './comicsList.scss';\n\n// const ComicsList = () => {\n//     const [comicsList, setComicsList] = useState([]);\n//     const [newItemsLoading, setNewItemsLoading] = useState(false);\n//     const [offset, setOffset] = useState(0);\n//     const [comicsEnd, setComicsEnd] = useState(false);\n\n\n//     const {loading, error, getComics} = useMarvelService();\n\n//     useEffect(() => {\n//         onRequest(offset, true);\n//     }, [])\n\n//     const onRequest = (offset, initial) => {\n//         initial ? setNewItemsLoading(false) : setNewItemsLoading(true); //если initial = true, то загрузка первичная и setNewItemsLoading(false) должно остатьс в false\n\n//         getComics(offset)\n//             .then(onComicsListLoaded)\n//     }\n\n//     const onComicsListLoaded = (newList) => {\n//         let end = false;\n//         if (newList.length < 8) {\n//             end = true;\n//         }\n//         setComicsList([...comicsList, ...newList]);\n//         setNewItemsLoading(false);\n//         setOffset(offset + 8);\n//         setComicsEnd(end);\n//     }\n\n//     const renderComics = (arr) => {\n//         const comics = arr.map(obj => {\n\n//             return (\n//                 <li key={obj.id} className=\"comics__item\">\n//                     <a href=\"#\">\n//                         <img src={obj.image} alt=\"ultimate war\" className=\"comics__item-img\"/>\n//                         <div className=\"comics__item-name\">{obj.name.toUpperCase()}</div>\n//                         <div className=\"comics__item-price\">{obj.price}</div>\n//                     </a>\n//                 </li>\n//             )\n//         })\n\n//         return (\n//             <ul className=\"comics__grid\">\n//                 {comics}\n//             </ul>\n// )\n     \n//     }\n\n//    const items = renderComics(comicsList);\n//    const errorMessage = error ? <ErrorMessage/> : null;\n//    const spinner = loading && !newItemsLoading ? <Spinner/> : null;\n\n//     return (\n//         <div className=\"comics__list\">\n//             {items}\n//             {spinner}\n//             {errorMessage}\n//             <button\n//                 className=\"button button__main button__long\"\n//                 disabled={newItemsLoading}\n//                 style={{'display' : comicsEnd ? 'none' : 'block'}}\n//                 onClick={() => onRequest(offset)}>\n//                 <div className=\"inner\">load more</div>\n//             </button>\n//         </div>\n//     )\n\n    \n// }\n\n// export default ComicsList;"]},"metadata":{},"sourceType":"module"}