{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/anya/hooks/src/components/comicsList/ComicsList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './comicsList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ComicsList = () => {\n  _s();\n\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemsLoading, setNewItemsLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnd, setComicsEnd] = useState(false);\n  const {\n    loading,\n    error,\n    getComics\n  } = useMarvelService();\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemsLoading(false) : setNewItemsLoading(true); //если initial = true, то загрузка первичная и setNewItemsLoading(false) должно остатьс в false\n\n    getComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = newList => {\n    let end = false;\n\n    if (newList.length < 8) {\n      end = true;\n    }\n\n    setComicsList([...comicsList, ...newList]);\n    setNewItemsLoading(false);\n    setOffset(offset + 8);\n    setComicsEnd(ended);\n  };\n\n  const renderComics = arr => {\n    const comics = arr.map(obj => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comics__item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: obj.image,\n            alt: \"ultimate war\",\n            className: \"comics__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comics__item-name\",\n            children: obj.name.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comics__item-price\",\n            children: obj.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, obj.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comics__grid\",\n      children: comics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  };\n\n  const items = renderComics(comicsList);\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 33\n  }, this) : null;\n  const spinner = loading && !newItemsLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 50\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comics__list\",\n    children: [items, spinner, errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newItemsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ComicsList, \"TscOxpCylpEEid4OGqwMLvAF9vE=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = ComicsList;\nexport default ComicsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComicsList\");","map":{"version":3,"sources":["/home/anton/Рабочий стол/anya/hooks/src/components/comicsList/ComicsList.js"],"names":["useEffect","useState","useMarvelService","Spinner","ErrorMessage","ComicsList","comicsList","setComicsList","newItemsLoading","setNewItemsLoading","offset","setOffset","comicsEnd","setComicsEnd","loading","error","getComics","onRequest","initial","then","onComicsListLoaded","newList","end","length","ended","renderComics","arr","comics","map","obj","image","name","toUpperCase","price","id","items","errorMessage","spinner"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnd, setComicsEnd] = useState(false);\n\n\n    const {loading, error, getComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemsLoading(false) : setNewItemsLoading(true); //если initial = true, то загрузка первичная и setNewItemsLoading(false) должно остатьс в false\n\n        getComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newList) => {\n        let end = false;\n        if (newList.length < 8) {\n            end = true;\n        }\n        setComicsList([...comicsList, ...newList]);\n        setNewItemsLoading(false);\n        setOffset(offset + 8);\n        setComicsEnd(ended);\n    }\n\n    const renderComics = (arr) => {\n        const comics = arr.map(obj => {\n\n            return (\n                <li key={obj.id} className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={obj.image} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{obj.name.toUpperCase()}</div>\n                        <div className=\"comics__item-price\">{obj.price}</div>\n                    </a>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {comics}\n            </ul>\n)\n     \n    }\n\n   const items = renderComics(comicsList);\n   const errorMessage = error ? <ErrorMessage/> : null;\n   const spinner = loading && !newItemsLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {items}\n            {spinner}\n            {errorMessage}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemsLoading}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n\n    \n}\n\nexport default ComicsList;"]},"metadata":{},"sourceType":"module"}