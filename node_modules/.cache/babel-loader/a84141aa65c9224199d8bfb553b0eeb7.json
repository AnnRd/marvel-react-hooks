{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/anya/hooks/src/components/randomChar/RandomChar.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomChar = () => {\n  _s();\n\n  const [character, setCharacter] = useState({});\n  const {\n    loading,\n    error,\n    getCharacter\n  } = useMarvelService();\n  useEffect(() => {\n    updateChar();\n  }, []);\n\n  const onCharLoaded = character => {\n    setCharacter(character);\n  };\n\n  const updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); //  * (max - min) + min\n\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const content = !loading && !error ? /*#__PURE__*/_jsxDEV(View, {\n    character: character\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 46\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 35\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 37\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar\",\n    children: [content, spinner, errorMessage, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__static\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 52\n        }, this), \"Do you want to get to know him better?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: \"Or choose another one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateChar,\n        className: \"button button__main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"try it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mjolnir,\n        alt: \"mjolnir\",\n        className: \"randomchar__decoration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n};\n\n_s(RandomChar, \"tMYZZh2mSfgYsygr+F6Or86SjDM=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = RandomChar;\n\nconst View = props => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki\n  } = props.character;\n  const notAvailableImg = thumbnail.includes('image_not_available');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: \"Random character\",\n      style: {\n        objectFit: notAvailableImg ? 'contain' : 'cover'\n      },\n      className: \"randomchar__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = View;\nexport default RandomChar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RandomChar\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["/home/anton/Рабочий стол/anya/hooks/src/components/randomChar/RandomChar.js"],"names":["useState","useEffect","useMarvelService","Spinner","ErrorMessage","mjolnir","RandomChar","character","setCharacter","loading","error","getCharacter","updateChar","onCharLoaded","id","Math","floor","random","then","content","spinner","errorMessage","View","props","name","description","thumbnail","homepage","wiki","notAvailableImg","includes","objectFit"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    const [character, setCharacter] = useState({});\n    const {loading, error, getCharacter} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    const onCharLoaded = (character) => {\n        setCharacter(character);\n    }\n\n    const updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); //  * (max - min) + min\n\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n        const content = !loading && !error ? <View character={character}/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error? <ErrorMessage/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {content}\n                {spinner}\n                {errorMessage}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n      \n\n}\n\nconst View = (props) => {\n    const {name, description, thumbnail, homepage, wiki} = props.character;\n    const notAvailableImg = thumbnail.includes('image_not_available');\n\n    return (\n        <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" style={{objectFit: notAvailableImg ? 'contain' : 'cover'}} className=\"randomchar__img\"/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                            {description}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n    )\n}\n\nexport default RandomChar;"]},"metadata":{},"sourceType":"module"}