{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/anya/marvel/marvel/src/components/charList/CharList.js\";\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false,\n      newItemsLoading: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onRequest = offset => {\n      this.onCharListLoading();\n      this.marvelService.getAllCharacters(offset).then(this.onCharLoaded).catch(this.onError);\n    };\n\n    this.onCharListLoading = () => {\n      this.setState({\n        newItemsLoading: true\n      });\n    };\n\n    this.onCharLoaded = newCharList => {\n      this.setState(({\n        charList\n      }) => ({\n        charList: [...charList, ...newCharList],\n        //развернула старый массив персонажей и за ним добавила новый\n        loading: false,\n        newItemsLoading: false\n      }));\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.onRequest(); //запускается и при первичной загрузке => аргумента нет и метод ориенируется на _baseOffset в MarvelService\n  }\n\n  renderCharacters(arr) {\n    const characters = arr.map(obj => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n\n      if (obj.thumbnail.includes('image_not_available')) {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item char__item_selected\",\n        onClick: () => this.props.onCharSelected(obj.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: obj.thumbnail,\n          alt: obj.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: obj.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, obj.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this); //  УБРАТЬ АКТИВНЫЙ СТИЛЬ - безз него класс char__item\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: characters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this); //Для центровки спиннера/ошибки\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error\n    } = this.state;\n    const items = this.renderCharacters(charList);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 35\n    }, this) : null;\n    const content = !loading && !error ? items : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [content, spinner, errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CharList;","map":{"version":3,"sources":["/home/anton/Рабочий стол/anya/marvel/marvel/src/components/charList/CharList.js"],"names":["Component","MarvelService","Spinner","ErrorMessage","CharList","state","charList","loading","error","newItemsLoading","marvelService","onRequest","offset","onCharListLoading","getAllCharacters","then","onCharLoaded","catch","onError","setState","newCharList","componentDidMount","renderCharacters","arr","characters","map","obj","imgStyle","thumbnail","includes","props","onCharSelected","id","name","render","items","errorMessage","spinner","content"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,iBAAP;;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAgC;AAAA;AAAA;AAAA,SAC5BK,KAD4B,GACpB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,OAAO,EAAE,IAFL;AAGJC,MAAAA,KAAK,EAAE,KAHH;AAIJC,MAAAA,eAAe,EAAE;AAJb,KADoB;AAAA,SAQ5BC,aAR4B,GAQZ,IAAIT,aAAJ,EARY;;AAAA,SAc5BU,SAd4B,GAcfC,MAAD,IAAY;AACpB,WAAKC,iBAAL;AAEA,WAAKH,aAAL,CACKI,gBADL,CACsBF,MADtB,EAEKG,IAFL,CAEU,KAAKC,YAFf,EAGKC,KAHL,CAGW,KAAKC,OAHhB;AAIH,KArB2B;;AAAA,SAuB5BL,iBAvB4B,GAuBR,MAAM;AACtB,WAAKM,QAAL,CAAc;AACVV,QAAAA,eAAe,EAAE;AADP,OAAd;AAGH,KA3B2B;;AAAA,SA6B5BO,YA7B4B,GA6BZI,WAAD,IAAiB;AAC5B,WAAKD,QAAL,CAAe,CAAC;AAACb,QAAAA;AAAD,OAAD,MAAiB;AAC5BA,QAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAc,GAAGc,WAAjB,CADkB;AACc;AAC1Cb,QAAAA,OAAO,EAAE,KAFmB;AAG5BE,QAAAA,eAAe,EAAE;AAHW,OAAjB,CAAf;AAKH,KAnC2B;;AAAA,SAqC5BS,OArC4B,GAqClB,MAAM;AACZ,WAAKC,QAAL,CAAc;AACVZ,QAAAA,OAAO,EAAE,KADC;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAAd;AAIH,KA1C2B;AAAA;;AAU5Ba,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,SAAL,GADgB,CACE;AACrB;;AAgCDW,EAAAA,gBAAgB,CAACC,GAAD,EAAM;AAClB,UAAMC,UAAU,GAAGD,GAAG,CAACE,GAAJ,CAAQC,GAAG,IAAI;AAC9B,UAAIC,QAAQ,GAAG;AAAC,qBAAc;AAAf,OAAf;;AACA,UAAID,GAAG,CAACE,SAAJ,CAAcC,QAAd,CAAuB,qBAAvB,CAAJ,EAAmD;AAC/CF,QAAAA,QAAQ,GAAG;AAAC,uBAAc;AAAf,SAAX;AACH;;AAED,0BACI;AACA,QAAA,SAAS,EAAC,gCADV;AAGA,QAAA,OAAO,EAAE,MAAM,KAAKG,KAAL,CAAWC,cAAX,CAA0BL,GAAG,CAACM,EAA9B,CAHf;AAAA,gCAII;AAAK,UAAA,GAAG,EAAEN,GAAG,CAACE,SAAd;AAAyB,UAAA,GAAG,EAAEF,GAAG,CAACO,IAAlC;AAAyC,UAAA,KAAK,EAAEN;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6BD,GAAG,CAACO;AAAjC;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA,SAEKP,GAAG,CAACM,EAFT;AAAA;AAAA;AAAA;AAAA,cADJ,CAN8B,CAc5B;AAEL,KAhBkB,CAAnB;AAkBA,wBACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACKR;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,CAnBkB,CAuBhB;AACL;;AAGDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAC5B,MAAAA,QAAD;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA;AAApB,QAA6B,KAAKH,KAAxC;AAEA,UAAM8B,KAAK,GAAG,KAAKb,gBAAL,CAAsBhB,QAAtB,CAAd;AAEA,UAAM8B,YAAY,GAAG5B,KAAK,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAqB,IAA/C;AACA,UAAM6B,OAAO,GAAG9B,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAgB,IAAvC;AACA,UAAM+B,OAAO,GAAG,CAAC/B,OAAD,IAAY,CAACC,KAAb,GAAqB2B,KAArB,GAA6B,IAA7C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBACSG,OADT,EAESD,OAFT,EAGSD,YAHT,eAII;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA1F2B;;AA8FhC,eAAehC,QAAf","sourcesContent":["import { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nclass CharList extends Component{\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemsLoading: false,\n    };\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest(); //запускается и при первичной загрузке => аргумента нет и метод ориенируется на _baseOffset в MarvelService\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemsLoading: true\n        })\n    }\n\n    onCharLoaded = (newCharList) => {\n        this.setState( ({charList}) => ({\n            charList: [...charList, ...newCharList],  //развернула старый массив персонажей и за ним добавила новый\n            loading: false,\n            newItemsLoading: false,\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    renderCharacters(arr) {\n        const characters = arr.map(obj => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (obj.thumbnail.includes('image_not_available')) {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <li\n                className=\"char__item char__item_selected\"\n                key={obj.id}\n                onClick={() => this.props.onCharSelected(obj.id)}>\n                    <img src={obj.thumbnail} alt={obj.name}  style={imgStyle}/>\n                    <div className=\"char__name\">{obj.name}</div>\n                </li>\n            ) //  УБРАТЬ АКТИВНЫЙ СТИЛЬ - безз него класс char__item\n            \n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {characters}\n            </ul>\n        ) //Для центровки спиннера/ошибки\n    }\n    \n\n    render() {\n        const {charList, loading, error} = this.state;\n        \n        const items = this.renderCharacters(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !loading && !error ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                    {content}\n                    {spinner}\n                    {errorMessage}\n                <button className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n    \n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}