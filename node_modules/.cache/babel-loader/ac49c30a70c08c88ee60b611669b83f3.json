{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/anya/hooks/src/components/comicsList/ComicsList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './comicsList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ComicsList = () => {\n  _s();\n\n  const [comicsItem, setComicsItem] = useState([]);\n  const {\n    loading,\n    error,\n    getComics\n  } = useMarvelService(); // useEffect(async () => {\n  //     const result = await getComics();\n  //     console.log(result);\n  // }, [])\n\n  useEffect(() => {\n    getComics().then(onComicsLoaded);\n  }, []);\n\n  const onComicsLoaded = com => {\n    setComicsItem(com);\n  };\n\n  const renderComics = arr => {\n    const comics = arr.map(obj => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n\n      if (obj.image.includes('image_not_available')) {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comics__item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: obj.image,\n            alt: \"ultimate war\",\n            className: \"comics__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comics__item-name\",\n            children: obj.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comics__item-price\",\n            children: [obj.price, \"$\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"comics__grid\",\n        children: comics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  };\n\n  const items = renderComics(comicsItem); //должен приходить из ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comics__list\",\n    children: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ComicsList, \"WJTF1Moa6WD3pZbBuk2CdMPgRqo=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = ComicsList;\nexport default ComicsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComicsList\");","map":{"version":3,"sources":["/home/anton/Рабочий стол/anya/hooks/src/components/comicsList/ComicsList.js"],"names":["useEffect","useState","useMarvelService","Spinner","ErrorMessage","ComicsList","comicsItem","setComicsItem","loading","error","getComics","then","onComicsLoaded","com","renderComics","arr","comics","map","obj","imgStyle","image","includes","name","price","items"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,mBAAP;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AAGA,QAAM;AAACO,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA8BR,gBAAgB,EAApD,CAJqB,CAMrB;AACA;AAEA;AACA;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,SAAS,GAAGC,IAAZ,CAAiBC,cAAjB;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAIC,GAAD,IAAS;AAC5BN,IAAAA,aAAa,CAACM,GAAD,CAAb;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC1B,UAAMC,MAAM,GAAGD,GAAG,CAACE,GAAJ,CAAQC,GAAG,IAAI;AAC1B,UAAIC,QAAQ,GAAG;AAAC,qBAAc;AAAf,OAAf;;AACA,UAAID,GAAG,CAACE,KAAJ,CAAUC,QAAV,CAAmB,qBAAnB,CAAJ,EAA+C;AAC3CF,QAAAA,QAAQ,GAAG;AAAC,uBAAc;AAAf,SAAX;AACH;;AAED,0BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,+BACI;AAAG,UAAA,IAAI,EAAC,GAAR;AAAA,kCACI;AAAK,YAAA,GAAG,EAAED,GAAG,CAACE,KAAd;AAAqB,YAAA,GAAG,EAAC,cAAzB;AAAwC,YAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,sBAAoCF,GAAG,CAACI;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,uBAAqCJ,GAAG,CAACK,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAfc,CAAf;AAiBA,wBACQ;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBACCP;AADD;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADR;AAWH,GA7BD;;AA+BD,QAAMQ,KAAK,GAAGV,YAAY,CAACR,UAAD,CAA1B,CAnDsB,CAmDkB;;AAEvC,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACKkB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA5DD;;GAAMnB,U;UAIkCH,gB;;;KAJlCG,U;AA8DN,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comicsItem, setComicsItem] = useState([]);\n\n\n    const {loading, error, getComics} = useMarvelService();\n\n    // useEffect(async () => {\n    //     const result = await getComics();\n\n    //     console.log(result);\n    // }, [])\n\n    useEffect(() => {\n        getComics().then(onComicsLoaded);\n    }, [])\n\n    const onComicsLoaded = (com) => {\n        setComicsItem(com)\n    }\n\n    const renderComics = (arr) => {\n        const comics = arr.map(obj => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (obj.image.includes('image_not_available')) {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <li className=\"comics__item\">\n                    <a href=\"#\">\n                        <img src={obj.image} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{obj.name}</div>\n                        <div className=\"comics__item-price\">{obj.price}$</div>\n                    </a>\n                </li>\n            )\n        })\n\n        return (\n                <>\n                    <ul className=\"comics__grid\">\n                    {comics}\n                    </ul>\n                    <button className=\"button button__main button__long\">\n                        <div className=\"inner\">load more</div>\n                    </button>\n                </>\n        )\n     \n    }\n\n   const items = renderComics(comicsItem); //должен приходить из ...\n\n    return (\n        <div className=\"comics__list\">\n            {items}\n        </div>\n    )\n\n    \n}\n\nexport default ComicsList;"]},"metadata":{},"sourceType":"module"}