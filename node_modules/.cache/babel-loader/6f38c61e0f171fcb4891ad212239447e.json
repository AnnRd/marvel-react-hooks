{"ast":null,"code":"class MarvelService {\n  constructor() {\n    this._apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    this._apiKey = 'apikey=f65f5a21349dce7531dd6bd0db9e3868';\n    this._baseOffset = 210;\n\n    this.getResource = async url => {\n      let res = await fetch(url);\n\n      if (!res.ok) {\n        throw new Error(`Can not fetch ${url}, status : ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllCharacters = async (offset = this._baseOffset) => {\n      const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=210&${this._apiKey}`);\n      return res.data.results.map(this._transformCharacter);\n    };\n\n    this.getCharacter = async id => {\n      const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n      return this._transformCharacter(res.data.results[0]);\n    };\n\n    this._transformCharacter = character => {\n      return {\n        id: character.id,\n        name: character.name,\n        description: character.description ? `${character.description.slice(0, 210)}...` : 'There`s no description for this character',\n        thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\n        homepage: character.urls[0].url,\n        wiki: character.urls[1].url,\n        comics: character.comics.items\n      };\n    };\n  }\n\n}\n\nexport default MarvelService;","map":{"version":3,"sources":["/home/anton/Рабочий стол/anya/marvel/marvel/src/services/MarvelService.js"],"names":["MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","res","fetch","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","character","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AAAA;AAAA,SAChBC,QADgB,GACL,2CADK;AAAA,SAEhBC,OAFgB,GAEN,yCAFM;AAAA,SAGhBC,WAHgB,GAGF,GAHE;;AAAA,SAKhBC,WALgB,GAKF,MAAOC,GAAP,IAAe;AACzB,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;;AAEA,UAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,cAAM,IAAIC,KAAJ,CAAW,iBAAgBJ,GAAI,cAAaC,GAAG,CAACI,MAAO,EAAvD,CAAN;AACH;;AAED,aAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACH,KAbe;;AAAA,SAehBC,gBAfgB,GAeG,OAAOC,MAAM,GAAG,KAAKV,WAArB,KAAqC;AACpD,YAAMG,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,GAAE,KAAKH,QAAS,iCAAgC,KAAKC,OAAQ,EAA/E,CAAlB;AACA,aAAOI,GAAG,CAACQ,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqB,KAAKC,mBAA1B,CAAP;AACH,KAlBe;;AAAA,SAoBhBC,YApBgB,GAoBD,MAAOC,EAAP,IAAc;AACzB,YAAMb,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,GAAE,KAAKH,QAAS,cAAakB,EAAG,IAAG,KAAKjB,OAAQ,EAAlE,CAAlB;AAEA,aAAO,KAAKe,mBAAL,CAAyBX,GAAG,CAACQ,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAzB,CAAP;AACH,KAxBe;;AAAA,SA0BhBE,mBA1BgB,GA0BOG,SAAD,IAAe;AACjC,aAAO;AACHD,QAAAA,EAAE,EAAEC,SAAS,CAACD,EADX;AAEHE,QAAAA,IAAI,EAAED,SAAS,CAACC,IAFb;AAGHC,QAAAA,WAAW,EAAEF,SAAS,CAACE,WAAV,GAAyB,GAAEF,SAAS,CAACE,WAAV,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+B,GAA/B,CAAoC,KAA/D,GAAsE,2CAHhF;AAIHC,QAAAA,SAAS,EAAEJ,SAAS,CAACI,SAAV,CAAoBC,IAApB,GAA2B,GAA3B,GAAiCL,SAAS,CAACI,SAAV,CAAoBE,SAJ7D;AAKHC,QAAAA,QAAQ,EAAEP,SAAS,CAACQ,IAAV,CAAe,CAAf,EAAkBvB,GALzB;AAMHwB,QAAAA,IAAI,EAAET,SAAS,CAACQ,IAAV,CAAe,CAAf,EAAkBvB,GANrB;AAOHyB,QAAAA,MAAM,EAAEV,SAAS,CAACU,MAAV,CAAiBC;AAPtB,OAAP;AASH,KApCe;AAAA;;AAAA;;AAuCpB,eAAe/B,aAAf","sourcesContent":["class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=f65f5a21349dce7531dd6bd0db9e3868';\n    _baseOffset = 210;\n\n    getResource = async (url) => {\n        let res = await fetch(url);\n        \n        if (!res.ok) {\n            throw new Error(`Can not fetch ${url}, status : ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=210&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter)\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (character) => {\n        return {\n            id: character.id,\n            name: character.name,\n            description: character.description ? `${character.description.slice(0, 210)}...` : 'There`s no description for this character',\n            thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\n            homepage: character.urls[0].url,\n            wiki: character.urls[1].url,\n            comics: character.comics.items,\n        }\n    }\n}\n\nexport default MarvelService;"]},"metadata":{},"sourceType":"module"}