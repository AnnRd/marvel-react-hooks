{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n  _s();\n\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=f65f5a21349dce7531dd6bd0db9e3868';\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const _transformCharacter = character => {\n    return {\n      id: character.id,\n      name: character.name,\n      description: character.description ? `${character.description.slice(0, 210)}...` : 'There`s no description for this character',\n      thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\n      homepage: character.urls[0].url,\n      wiki: character.urls[1].url,\n      comics: character.comics.items\n    };\n  };\n\n  const getComics = async (offset = 0) => {\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformComics);\n  };\n\n  const _transformComics = comics => {\n    console.log(comics);\n    return {\n      id: comics.id,\n      name: comics.title,\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n      price: comics.prices[0].price === 0 ? 'Not available' : comics.prices[0].price + '$',\n      image: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects.language || 'en-us'\n    };\n  };\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter,\n    clearError,\n    getComics\n  };\n};\n\n_s(useMarvelService, \"9hyEhuOfcolEaHPbDIyQe2OeeLY=\", false, function () {\n  return [useHttp];\n});\n\nexport default useMarvelService;","map":{"version":3,"sources":["/home/anton/Рабочий стол/anya/hooks/src/services/MarvelService.js"],"names":["useHttp","useMarvelService","loading","request","error","clearError","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacter","id","character","name","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","getComics","_transformComics","console","log","title","pageCount","price","prices","image","language","textObjects"],"mappings":"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","sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=f65f5a21349dce7531dd6bd0db9e3868';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter)\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const _transformCharacter = (character) => {\n        return {\n            id: character.id,\n            name: character.name,\n            description: character.description ? `${character.description.slice(0, 210)}...` : 'There`s no description for this character',\n            thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\n            homepage: character.urls[0].url,\n            wiki: character.urls[1].url,\n            comics: character.comics.items,\n        }\n    }\n\n    const getComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\n        return res.data.results.map(_transformComics)\n    }\n    \n    const _transformComics = (comics) => {\n        console.log(comics);\n        return {\n            id: comics.id,\n            name: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            price: comics.prices[0].price === 0 ? 'Not available' : comics.prices[0].price + '$',\n            image: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-us',\n        }\n    }\n\n    return {loading, error, getAllCharacters, getCharacter, clearError, getComics};\n}\n\nexport default useMarvelService;"]},"metadata":{},"sourceType":"module"}