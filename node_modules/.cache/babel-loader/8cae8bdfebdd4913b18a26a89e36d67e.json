{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/anya/marvel/marvel/src/components/charInfo/CharInfo.js\";\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CharInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      character: {},\n      loading: false,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.updateChar = () => {\n      const {\n        charId\n      } = this.props;\n\n      if (!charId) {\n        return;\n      }\n\n      this.onCharLoading();\n      this.marvelService.getCharacter(charId).then(this.onCharLoaded).catch(this.onError);\n    };\n\n    this.onCharLoading = () => {\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.onCharLoaded = character => {\n      this.setState({\n        character,\n        loading: false\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst View = ({\n  character\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = View;\nexport default CharInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/home/anton/Рабочий стол/anya/marvel/marvel/src/components/charInfo/CharInfo.js"],"names":["Component","MarvelService","thor","CharInfo","state","character","loading","error","marvelService","updateChar","charId","props","onCharLoading","getCharacter","then","onCharLoaded","catch","onError","setState","componentDidMount","render","View"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAEA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BI,KAD6B,GACrB;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,KAAK,EAAE;AAHH,KADqB;AAAA,SAO7BC,aAP6B,GAOb,IAAIP,aAAJ,EAPa;;AAAA,SAa7BQ,UAb6B,GAahB,MAAM;AACf,YAAM;AAACC,QAAAA;AAAD,UAAW,KAAKC,KAAtB;;AAEA,UAAI,CAACD,MAAL,EAAa;AACT;AACH;;AAED,WAAKE,aAAL;AAEA,WAAKJ,aAAL,CACKK,YADL,CACkBH,MADlB,EAEKI,IAFL,CAEU,KAAKC,YAFf,EAGKC,KAHL,CAGW,KAAKC,OAHhB;AAIH,KA1B4B;;AAAA,SA4B7BL,aA5B6B,GA4Bb,MAAM;AAClB,WAAKM,QAAL,CAAc;AACVZ,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAhC4B;;AAAA,SAkC7BS,YAlC6B,GAkCbV,SAAD,IAAe;AAC1B,WAAKa,QAAL,CAAc;AACVb,QAAAA,SADU;AAEVC,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KAvC4B;;AAAA,SAyC7BW,OAzC6B,GAyCnB,MAAM;AACZ,WAAKC,QAAL,CAAc;AACVZ,QAAAA,OAAO,EAAE,KADC;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAAd;AAIH,KA9C4B;AAAA;;AAS7BY,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,UAAL;AACH;;AAqCDW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtD4B;;AA0DjC,MAAMC,IAAI,GAAG,CAAC;AAAChB,EAAAA;AAAD,CAAD,KAAiB;AAC1B,sBACI,qCADJ;AAKH,CAND;;KAAMgB,I;AAQN,eAAelB,QAAf","sourcesContent":["import { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\nimport thor from '../../resources/img/thor.jpeg';\n\nclass CharInfo extends Component {\n    state = {\n        character: {},\n        loading: false,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onCharLoaded = (character) => {\n        this.setState({\n            character, \n            loading: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"char__info\">\n                \n            </div>\n        )\n    }\n    \n}\n\nconst View = ({character}) => {\n    return (\n        <>\n        \n        </>\n    )\n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}